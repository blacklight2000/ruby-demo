# Ref: http://stackoverflow.com/questions/2370702/one-liner-to-recursively-list-directories-in-ruby

#this script addss "-32" to say "ozone.rb" for all ruby files in the directory tree of the current directory

Dir['**/*'].reject{|fn| File.directory?(fn) }.each { |f| File.rename(f,f.sub(/\-32(\.rb$)/,'-32\1')) } 



#this script removes "-32" from say "ozone-32.rb" for all ruby files in the directory tree of the current directory

Dir['**/*'].reject{|fn| File.directory?(fn) }.each { |f| File.rename(f,f.sub(/\-32(\.rb$)/,'\1')) } 


#Assuming that you are writing your name in the order of first name, optional middle name or initial, optional last name, this regex will capture your names regardless of the number of blanks spaces between each.

irb(main):171:0> regex = Regexp.new('(\w+\b)(?: )*(\w+\b?.?)?(?: )*(.*)?')
=> /(\w+\b)(?: )*(\w+\b?.?)?(?: )*(.*)?/

irb(main):173:0> Name = "Vietnhi  Nguyen  Phuvan"
=> "Vietnhi  Nguyen  Phuvan"

irb(main):174:0> Name.scan(regex)
=> [["Vietnhi", "Nguyen ", "Phuvan"]]

irb(main):177:0> puts $1
Vietnhi
=> nil
irb(main):178:0> puts $2
N.
=> nil
irb(main):179:0> puts $3
Phuvan
=> nil


#This code fragment deletes a ruby commant block from a ruby program, where a is an example string

>> a
=> "a = 0\n=begin\nComment Block Line 1\nComment Block Line 2\n=end\nb=1\n"
>> a.sub(/=[\w\W]*=end\n/,'')
=> "a b=1\n"
>> a.sub(/=begin[\w\W]*=end\n/,'')
=> "a = 0\nb=1\n"


#This code fragment deletes a ruby comment line. Use gsub to delete every comment line that you can find. c is an example string

>> c = "a = 0\n#this is a comment\nb=1\n"
=> "a = 0\n#this is a comment\nb=1\n"
>> puts c
a = 0
#this is a comment
b=1
=> nil
>> c.sub(/^#[^\n]*\n/,'')
=> "a = 0\nb=1\n"

# Complex numbers and arithmetic functions

=> include Math
>> require 'complex'
=> true
>> sqrt(-1)
=> Complex(0, 1.0)

